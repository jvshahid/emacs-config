(straight-use-package 'clojure-mode)
(straight-use-package 'flycheck-clojure)
(straight-use-package 'cider)
(straight-use-package 'ac-cider)

(with-eval-after-load 'clojure-mode
  (add-hook 'clojure-mode-hook 'projectile-mode)
  (add-hook 'clojure-mode-hook 'parinfer-mode)
  (add-hook 'clojure-mode-hook 'flycheck-mode)
  (add-hook 'clojure-mode-hook 'flycheck-clojure-setup)
  (add-hook 'clojure-mode-hook 'yas-minor-mode)
  (add-hook 'clojure-mode-hook (lambda ()
                                 (push 'clojure-cider-typed flycheck-disabled-checkers)))
  (add-hook 'clojure-mode-hook (lambda ()
                                 (local-set-key (kbd "C-x p") 'parinfer-toggle-mode)))
  (add-hook 'clojure-mode-hook (lambda ()
                                 (local-set-key (kbd "C-c C-r") 'projectile-toggle-between-implementation-and-test))))

(defun cider-autocomplete-setup ()
  (auto-complete-mode)
  (ac-cider-setup)
  (define-key cider-mode-map (kbd "M-.") 'auto-complete)
  (define-key cider-mode-map (kbd "C-c C-j") 'cider-find-dwim))
(add-hook 'cider-mode-hook 'cider-autocomplete-setup)

(add-hook 'cider-repl-mode-hook 'cider-autocomplete-setup)
(with-eval-after-load 'auto-complete
  (ac-config-default)
  (add-to-list 'ac-modes 'cider-mode)
  (add-to-list 'ac-modes 'cider-repl-mode)
  (setq ac-ignore-case t)
  (setq ac-auto-show-menu t)
  (setq ac-auto-start t)
  (setq ac-delay 0.0)
  (add-hook 'auto-complete-mode-hook (lambda ()
                                       (local-set-key "\M-." 'auto-complete))))

